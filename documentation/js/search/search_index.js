var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.779,1,3.052,2,1.452,3,0.525,4,0.452,5,0.452,6,3.307,7,0.644,8,0.039,9,0.963,10,2.623,11,3.307,12,0.525,13,0.026,14,2.49,15,1.78,16,0.032,17,0.032]],["title/modules/AppModule.html",[18,1.083,19,1.858]],["body/modules/AppModule.html",[1,2.821,2,1.44,3,0.379,4,0.327,5,0.327,7,0.694,8,0.039,9,0.696,10,2.614,11,2.388,12,0.379,13,0.019,16,0.026,17,0.026,18,1.645,19,3.586,20,1.286,21,1.286,22,1.597,23,1.597,24,1.286,25,2.505,26,1.597,27,2.388,28,2.388,29,2.388,30,2.614,31,2.92,32,2.351,33,2.193,34,1.597,35,1.429,36,2.901,37,2.47,38,2.901,39,2.901,40,2.901,41,2.901]],["title/injectables/AppService.html",[10,1.477,42,1.083]],["body/injectables/AppService.html",[3,0.504,4,0.433,5,0.433,7,0.504,8,0.038,9,0.923,10,2.363,12,0.504,13,0.025,16,0.031,17,0.031,42,1.733,43,2.119,44,3.169,45,0.828,46,2.363,47,5.468,48,1.137,49,3.85,50,1.897,51,1.733,52,1.897,53,3.85,54,3.85]],["title/controllers/AuthController.html",[0,1.083,55,1.858]],["body/controllers/AuthController.html",[0,1.436,2,1.436,3,0.52,4,0.447,5,0.447,7,0.64,8,0.039,9,0.953,12,0.52,13,0.026,14,2.463,15,1.761,16,0.032,17,0.032,55,3.032,56,3.271,57,2.809,58,3.974,59,2.348,60,3.271,61,3.974]],["title/modules/AuthModule.html",[18,1.083,30,1.477]],["body/modules/AuthModule.html",[2,1.526,3,0.413,4,0.356,5,0.356,7,0.664,8,0.039,9,0.758,12,0.413,13,0.02,16,0.027,17,0.027,18,1.718,20,1.401,21,1.401,22,1.74,23,1.74,24,1.401,25,2.617,26,2.617,30,2.737,32,1.871,33,2.324,34,1.74,35,1.557,37,1.959,55,2.948,59,2.599,60,2.602,62,2.602,63,2.602,64,2.602,65,3.161,66,2.617,67,3.161,68,2.602]],["title/injectables/AuthService.html",[42,1.083,59,1.329]],["body/injectables/AuthService.html",[3,0.353,4,0.304,5,0.304,7,0.496,8,0.039,9,0.648,12,0.353,13,0.017,15,1.197,16,0.025,17,0.025,42,1.37,43,1.486,45,0.581,46,1.868,48,1.293,50,1.868,51,2.024,52,1.868,59,1.68,66,1.674,69,2.223,70,2.856,71,3.91,72,4.38,73,2.679,74,2.223,75,2.174,76,2.7,77,2.087,78,1.868,79,1.119,80,1.516,81,2.7,82,2.7,83,3.791,84,3.606,85,2.411,86,2.7,87,1.909,88,2.223,89,2.223,90,1.909,91,2.223,92,1.909,93,2.223,94,2.35,95,2.7,96,1.909,97,2.7,98,2.7,99,2.7,100,2.223]],["title/classes/CreatePostDto.html",[13,0.019,101,1.65]],["body/classes/CreatePostDto.html",[3,0.156,4,0.134,5,0.134,7,0.482,8,0.039,12,0.156,13,0.017,16,0.013,17,0.013,45,0.256,48,1.309,51,1.722,79,1.542,80,1.866,100,2.508,101,1.103,102,0.527,103,3.221,104,0.84,105,1.15,106,2.8,107,2.596,108,2.596,109,3.229,110,2.596,111,3.401,112,3.922,113,2.404,114,3.401,115,2.8,116,1.964,117,2.8,118,2.178,119,2.963,120,3.035,121,1.189,122,1.189,123,2.003,124,2.003,125,3.047,126,1.189,127,1.189,128,1.889,129,1.189,130,2.003,131,1.649,132,1.649,133,2.003,134,1.189,135,2.112,136,2.404,137,2.003,138,1.189,139,1.189,140,1.189,141,2.508,142,3.047,143,1.189,144,1.189,145,3.047,146,1.649,147,2.003,148,2.003,149,1.189,150,1.189,151,1.189,152,1.189,153,1.189,154,3.047,155,3.047,156,1.649,157,1.649,158,1.649,159,2.003,160,1.649,161,2.003,162,2.003,163,2.003,164,1.189,165,2.508,166,1.649,167,1.189,168,1.189,169,1.189,170,1.189,171,3.047,172,1.189,173,1.189,174,1.189,175,1.189,176,1.189,177,2.596,178,1.189,179,2.003,180,2.003,181,2.108,182,2.772,183,2.404,184,2.003,185,0.979,186,1.189,187,0.979,188,2.003,189,0.586,190,0.737,191,1.189,192,0.84,193,2.8,194,3.229,195,0.586,196,1.189,197,1.189,198,1.189,199,1.189,200,2.003,201,1.189,202,1.189,203,1.649,204,1.189,205,0.979,206,2.137,207,2.003,208,1.416,209,1.835,210,1.649,211,1.649]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.019,128,1.858]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.456,4,0.393,5,0.393,7,0.456,8,0.038,12,0.456,13,0.029,16,0.029,17,0.029,45,0.75,48,1.33,51,1.628,79,1.33,102,1.546,103,3.527,105,1.996,116,1.996,118,1.995,128,2.792,136,3.527,181,3.269,183,3.184,189,1.718,206,4.108,209,3.527,212,2.871,213,3.488,214,3.488,215,3.488]],["title/classes/CreateUserDto.html",[13,0.019,216,1.65]],["body/classes/CreateUserDto.html",[3,0.298,4,0.256,5,0.256,7,0.298,8,0.038,12,0.298,13,0.022,16,0.022,17,0.022,45,0.49,48,1.297,51,1.877,78,2.163,79,1.297,80,1.341,84,3.854,87,2.814,102,1.009,105,1.486,116,1.946,120,2.761,156,4.031,157,2.761,158,2.761,160,4.031,181,2.722,182,2.37,183,3.104,185,2.761,187,1.875,189,1.122,205,2.761,216,1.846,217,3.854,218,1.61,219,3.277,220,3.98,221,2.277,222,2.277,223,2.277,224,4.391,225,4.391,226,2.277,227,2.277,228,3.353,229,2.277,230,2.277,231,3.353,232,3.353,233,3.353,234,3.353,235,3.353,236,3.353,237,2.86,238,3.353,239,4.391,240,1.846,241,3.353,242,3.353,243,2.277,244,3.353,245,2.277,246,3.353,247,2.277]],["title/classes/GetUsersParamDto.html",[13,0.019,248,1.65]],["body/classes/GetUsersParamDto.html",[3,0.434,4,0.373,5,0.373,7,0.637,8,0.039,12,0.434,13,0.031,16,0.028,17,0.028,45,0.713,48,0.979,79,1.438,80,1.743,85,2.958,94,2.702,102,1.47,105,1.932,116,1.47,117,2.73,119,2.4,135,1.47,182,3.081,189,1.634,192,2.344,194,3.589,195,1.634,237,1.825,240,2.681,248,2.4,249,3.589,250,2.4,251,2.73,252,3.316,253,3.316,254,3.589]],["title/classes/PatchPostDto.html",[13,0.019,255,1.858]],["body/classes/PatchPostDto.html",[3,0.438,4,0.377,5,0.377,7,0.64,8,0.038,12,0.438,13,0.028,16,0.028,17,0.028,45,0.72,48,0.988,79,0.988,85,2.966,101,1.842,102,1.483,104,2.365,105,1.943,116,1.483,118,1.753,119,2.414,135,1.483,141,2.755,181,2.718,189,1.649,190,2.074,193,3.61,195,1.649,237,1.842,240,2.414,254,3.61,255,2.718,256,3.61,257,3.61,258,4.385,259,3.346,260,3.346,261,2.755,262,2.755]],["title/classes/PatchUserDto.html",[13,0.019,263,1.858]],["body/classes/PatchUserDto.html",[3,0.525,4,0.452,5,0.452,7,0.644,8,0.038,12,0.525,13,0.026,16,0.032,17,0.032,102,1.78,190,2.49,216,2.211,218,2.839,257,4.053,261,3.307,263,3.052,264,3.307,265,4.923,266,3.307,267,3.307,268,3.307]],["title/controllers/PostsController.html",[0,1.083,269,1.858]],["body/controllers/PostsController.html",[0,0.796,2,0.796,3,0.288,4,0.248,5,0.248,7,0.604,8,0.039,9,0.528,12,0.288,13,0.014,14,1.365,15,0.976,16,0.021,17,0.021,45,0.474,46,1.612,48,1.153,50,1.923,51,1.411,52,1.085,57,1.557,70,2.894,77,2.149,78,1.923,79,1.153,80,1.561,101,2.663,113,1.557,116,1.73,118,2.102,135,1.45,190,2.028,195,1.085,255,2.999,262,2.694,269,2.028,270,1.813,271,3.904,272,3.272,273,3.272,274,3.272,275,2.203,276,2.203,277,2.313,278,2.203,279,3.272,280,3.272,281,2.203,282,2.203,283,3.272,284,2.203,285,3.272,286,2.203,287,2.694,288,2.203,289,3.272,290,2.203,291,1.813,292,1.813,293,2.694,294,1.612,295,1.813,296,2.694,297,2.694,298,1.813,299,1.813,300,1.813,301,2.203,302,2.203,303,2.203,304,2.203,305,2.203,306,1.813,307,2.203,308,2.203,309,2.203,310,2.203,311,2.694,312,2.694,313,2.694,314,2.203,315,2.203]],["title/modules/PostsModule.html",[18,1.083,31,1.65]],["body/modules/PostsModule.html",[2,1.548,3,0.422,4,0.364,5,0.364,7,0.67,8,0.038,9,0.774,12,0.422,13,0.021,16,0.028,17,0.028,18,1.737,20,1.431,21,1.431,22,1.778,23,1.778,24,1.431,25,2.646,26,1.778,31,3.122,32,2.426,33,2.358,34,1.778,35,1.591,37,2.655,68,2.659,269,2.979,294,2.697,295,2.659,316,2.659,317,3.229,318,2.659,319,3.229,320,3.229]],["title/injectables/PostsService.html",[42,1.083,294,1.477]],["body/injectables/PostsService.html",[3,0.356,4,0.306,5,0.306,7,0.498,8,0.039,9,0.652,12,0.356,13,0.018,15,1.205,16,0.025,17,0.025,42,1.377,43,1.497,45,0.585,46,1.877,48,1.125,50,1.34,51,1.589,52,1.34,70,2.421,73,2.693,74,2.239,75,2.079,77,2.097,78,1.877,79,1.125,80,1.524,85,2.097,89,2.239,90,1.923,92,1.923,94,3.223,96,1.923,106,3.923,115,3.137,118,1.905,237,2.421,250,2.097,287,4.13,294,1.877,321,2.239,322,3.137,323,2.72,324,3.81,325,2.72,326,3.81,327,2.239,328,2.239,329,2.72,330,4.398]],["title/controllers/UsersController.html",[0,1.083,331,1.858]],["body/controllers/UsersController.html",[0,0.649,2,0.649,3,0.235,4,0.202,5,0.202,7,0.584,8,0.038,9,0.431,12,0.235,13,0.012,14,1.114,15,0.796,16,0.018,17,0.018,45,0.386,46,1.38,48,1.017,50,1.697,51,0.649,52,1.697,57,1.27,70,2.73,75,1.377,77,1.896,78,2.078,79,1.378,80,1.377,113,1.27,116,1.526,118,1.555,119,2.141,131,3.202,132,3.202,135,1.98,195,0.885,216,2.46,237,1.542,240,2.963,248,2.46,250,2.569,263,2.992,268,2.307,277,1.981,291,1.479,292,2.307,293,2.835,296,2.307,297,2.307,298,1.479,299,1.479,300,1.479,306,1.479,311,1.479,312,1.479,313,1.479,331,1.737,332,1.479,333,2.802,334,3.444,335,2.802,336,1.797,337,1.797,338,1.797,339,3.974,340,3.412,341,1.797,342,1.797,343,2.802,344,2.802,345,1.797,346,2.802,347,1.797,348,1.797,349,1.797,350,1.797,351,1.479,352,1.797,353,1.797,354,1.797,355,1.797,356,3.444,357,1.797,358,1.797,359,1.479,360,1.479,361,3.444,362,1.797,363,1.797,364,1.797,365,1.797,366,1.797,367,1.797,368,1.797,369,1.797,370,1.797,371,1.797,372,1.797,373,1.797]],["title/modules/UsersModule.html",[18,1.083,32,1.329]],["body/modules/UsersModule.html",[2,1.526,3,0.413,4,0.356,5,0.356,7,0.664,8,0.039,9,0.758,12,0.413,13,0.02,16,0.027,17,0.027,18,1.718,20,1.401,21,1.401,22,1.74,23,1.74,24,1.401,25,2.617,26,2.617,30,2.08,32,2.462,33,2.324,34,1.74,35,1.557,37,1.959,66,2.617,75,2.345,331,2.948,351,2.602,374,2.602,375,2.602,376,2.602,377,3.161,378,3.161,379,3.161]],["title/injectables/UsersService.html",[42,1.083,75,1.199]],["body/injectables/UsersService.html",[3,0.305,4,0.263,5,0.263,7,0.528,8,0.039,9,0.56,12,0.305,13,0.015,15,1.035,16,0.022,17,0.022,42,1.234,43,1.285,45,0.502,46,1.683,48,1.192,50,1.683,51,1.709,52,1.683,59,2.318,66,1.447,70,2.719,71,2.812,73,2.414,75,1.366,77,2.223,78,1.99,79,1.192,80,1.615,85,2.446,87,3.141,88,1.922,90,1.65,91,1.922,92,1.65,94,1.447,96,1.65,210,2.812,211,1.922,219,3.658,240,2.809,248,2.446,250,1.285,322,3.325,328,1.922,339,3.325,340,2.854,359,1.922,360,1.922,380,1.922,381,3.415,382,2.334,383,2.334,384,2.334,385,2.334,386,3.415,387,3.415,388,2.334,389,2.334,390,2.334,391,2.334,392,3.415,393,2.334,394,2.334]],["title/coverage.html",[395,2.88]],["body/coverage.html",[0,1.742,1,1.731,5,0.314,6,2.298,8,0.038,10,1.375,13,0.034,16,0.025,17,0.025,24,1.237,42,1.742,44,2.298,55,1.731,56,2.298,59,1.237,69,2.298,75,1.116,79,0.824,101,1.537,103,2.742,104,2.742,118,1.116,128,1.731,136,1.973,212,2.298,216,1.537,217,2.298,218,2.742,248,1.537,249,2.298,250,1.537,251,2.298,255,1.731,256,2.298,263,1.731,264,2.298,269,1.731,270,2.298,277,1.973,294,1.375,321,2.298,331,1.731,332,2.298,380,2.298,395,1.973,396,2.298,397,2.792,398,2.792,399,5.86,400,4.819,401,4.459,402,4.819,403,2.298,404,2.792,405,3.88,406,2.792,407,2.792,408,2.792,409,2.792]],["title/dependencies.html",[21,1.596,410,2.068]],["body/dependencies.html",[8,0.039,9,0.918,13,0.031,16,0.031,17,0.031,21,1.697,189,1.887,192,2.707,195,1.887,266,3.153,267,3.153,411,3.83,412,3.83,413,5.212,414,3.83,415,3.83,416,3.83,417,3.83,418,3.83,419,3.83,420,3.83,421,3.83,422,3.83,423,3.83,424,3.83,425,3.83]],["title/miscellaneous/enumerations.html",[426,1.557,427,2.965]],["body/miscellaneous/enumerations.html",[8,0.038,16,0.03,17,0.03,45,0.795,109,3.849,118,1.869,146,3.849,165,3.849,166,3.849,209,4.123,340,3.305,426,2.291,427,3.043,428,3.696,429,3.696,430,3.696,431,4.675,432,4.675,433,3.696,434,4.675,435,4.675]],["title/miscellaneous/functions.html",[426,1.557,436,2.965]],["body/miscellaneous/functions.html",[8,0.034,16,0.034,17,0.034,24,2.472,45,0.963,403,3.686,426,2.776,436,3.686,437,4.478]],["title/index.html",[45,0.54,438,2.512,439,2.512]],["body/index.html",[4,0.257,8,0.037,16,0.022,17,0.022,35,2.167,93,3.62,119,2.195,135,1.012,203,3.62,208,1.615,327,1.88,395,1.615,396,1.88,440,2.284,441,2.284,442,3.988,443,2.284,444,2.284,445,2.284,446,2.284,447,2.284,448,2.284,449,3.988,450,2.284,451,2.284,452,2.284,453,4.398,454,2.284,455,5.067,456,2.284,457,5.067,458,2.284,459,2.284,460,2.284,461,3.361,462,2.284,463,2.284,464,2.284,465,3.988,466,2.284,467,3.361,468,2.284,469,2.284,470,2.284,471,2.284,472,2.284,473,2.284,474,2.284,475,2.284,476,3.361,477,2.284,478,3.988,479,2.284,480,3.62,481,3.361,482,2.284,483,2.284,484,2.284,485,2.284,486,2.284,487,2.284,488,3.988,489,2.284,490,2.284,491,2.284,492,3.361,493,2.284,494,2.284,495,2.284,496,3.988,497,2.284,498,2.284,499,2.284,500,2.284,501,2.284,502,2.284,503,3.361,504,2.284,505,2.284,506,2.284,507,2.284,508,2.284,509,2.284,510,3.361,511,2.284,512,2.284,513,2.284,514,3.361,515,3.361,516,2.284,517,2.284,518,2.284,519,2.284,520,2.284,521,2.284,522,2.284,523,2.284,524,2.284,525,2.284,526,2.284,527,2.284,528,2.284,529,2.284,530,2.284,531,2.284,532,2.284,533,1.88]],["title/modules.html",[20,1.806]],["body/modules.html",[8,0.032,16,0.032,17,0.032,19,2.574,20,1.84,30,2.045,31,2.285,32,1.84,480,4.621,534,5.613,535,5.613,536,5.613]],["title/overview.html",[537,3.355]],["body/overview.html",[2,1.078,8,0.038,10,2.275,16,0.026,17,0.026,18,1.078,19,3.541,20,1.322,21,1.322,22,1.642,23,1.642,24,1.322,25,1.642,26,1.642,27,2.455,28,2.455,29,2.455,30,2.636,31,3.013,32,2.426,33,2.235,34,1.642,35,1.469,43,1.642,59,2.426,62,2.455,63,2.455,64,2.455,75,2.189,102,1.322,294,2.275,316,2.455,318,2.455,374,2.455,375,2.455,376,2.455,537,2.455,538,4.617,539,2.983]],["title/properties.html",[105,1.596,410,2.068]],["body/properties.html",[8,0.038,16,0.034,17,0.034,105,1.949,135,1.949,208,3.109,533,3.621,540,4.398,541,4.398,542,4.398]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":541,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t00:00:00z",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t00:00:00z'})@isiso8601()@isoptional",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["1.1.26",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["1234",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["1})@isint()@isnotempty",{"_index":259,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["1})@isoptional()@isint()@type(undefined",{"_index":252,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2",{"_index":330,"title":{},"body":{"injectables/PostsService.html":{}}}],["2.0.5",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["201",{"_index":279,"title":{},"body":{"controllers/PostsController.html":{}}}],["2021",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["4",{"_index":538,"title":{},"body":{"overview.html":{}}}],["50",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["6",{"_index":539,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["alphanumeric",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["amazing",{"_index":520,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":276,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apipropertyoptional",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":492,"title":{},"body":{"index.html":{}}}],["applications",{"_index":448,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":55,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{},"properties.html":{}}}],["authservice",{"_index":59,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["backers",{"_index":521,"title":{},"body":{"index.html":{}}}],["board",{"_index":513,"title":{},"body":{"index.html":{}}}],["body",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":536,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":534,"title":{},"body":{"modules.html":{}}}],["building",{"_index":443,"title":{},"body":{"index.html":{}}}],["channel",{"_index":483,"title":{},"body":{"index.html":{}}}],["character",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["check",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":62,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":63,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":316,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":317,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":318,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":374,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":376,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":375,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":473,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["console.log('isauth",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(createpostdto",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(patchpostdto",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersservice",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["contain",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["content",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":490,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":395,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{}}}],["created",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["created.'})@post('/new",{"_index":281,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":272,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":275,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":101,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":128,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["createuser",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":216,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["date",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":485,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":458,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":498,"title":{},"body":{"index.html":{}}}],["discord",{"_index":482,"title":{},"body":{"index.html":{}}}],["dive",{"_index":484,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":396,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/UsersService.html":{}}}],["doe@john.com",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["draft",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":468,"title":{},"body":{"index.html":{}}}],["each",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":444,"title":{},"body":{"index.html":{}}}],["eight",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["email",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["endpoint",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["enterprise",{"_index":502,"title":{},"body":{"index.html":{}}}],["enum",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":427,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["exists",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":487,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":257,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["featured",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["few",{"_index":471,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":328,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":322,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(gtusersparamdto",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":324,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["firstname",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["follow",{"_index":506,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":442,"title":{},"body":{"index.html":{}}}],["full",{"_index":501,"title":{},"body":{"index.html":{}}}],["function",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":436,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":273,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":438,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":248,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":493,"title":{},"body":{"index.html":{}}}],["grow",{"_index":517,"title":{},"body":{"index.html":{}}}],["gtusersparamdto",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["hands",{"_index":486,"title":{},"body":{"index.html":{}}}],["handy",{"_index":474,"title":{},"body":{"index.html":{}}}],["headers",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":499,"title":{},"body":{"index.html":{}}}],["here",{"_index":525,"title":{},"body":{"index.html":{}}}],["https://example.com/image.jpg",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://example.com/image.jpg'})@isoptional()@isurl",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":530,"title":{},"body":{"index.html":{}}}],["hyphens",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["id",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["installcompile",{"_index":456,"title":{},"body":{"index.html":{}}}],["interact",{"_index":494,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":254,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isoptional",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":213,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(50",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(50",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":510,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":512,"title":{},"body":{"index.html":{}}}],["john",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/UsersService.html":{}}}],["john@email.com",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":523,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":527,"title":{},"body":{"index.html":{}}}],["key",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{}}}],["last",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lastname",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":477,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":533,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":515,"title":{},"body":{"index.html":{}}}],["limit",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":508,"title":{},"body":{"index.html":{}}}],["list",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["longer",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["looking",{"_index":509,"title":{},"body":{"index.html":{}}}],["loop",{"_index":504,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(50",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["meta",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minimum",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(5",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":426,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":514,"title":{},"body":{"index.html":{}}}],["mode",{"_index":461,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":478,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":528,"title":{},"body":{"index.html":{}}}],["name",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":327,"title":{},"body":{"injectables/PostsService.html":{},"index.html":{}}}],["nest",{"_index":449,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":532,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":266,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":277,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":441,"title":{},"body":{"index.html":{}}}],["number",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["object\"}'})@isoptional()@isjson",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":511,"title":{},"body":{"index.html":{}}}],["official",{"_index":488,"title":{},"body":{"index.html":{}}}],["open",{"_index":516,"title":{},"body":{"index.html":{}}}],["option",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["optional",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["opttions.dto",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["opttions.dto.ts",{"_index":212,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["opttions.dto.ts:6",{"_index":214,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["opttions.dto.ts:9",{"_index":215,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":537,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":410,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto.ts",{"_index":251,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["params.dto.ts:13",{"_index":253,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parseintpipe",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":500,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":261,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":258,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":265,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patch('/edit",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpost",{"_index":274,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpost(@body",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpost(patchpostdto",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpostdto",{"_index":255,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchuser",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":263,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["please",{"_index":481,"title":{},"body":{"index.html":{}}}],["post",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":278,"title":{},"body":{"controllers/PostsController.html":{}}}],["post'})@isstring()@isnotempty()@matches(/^[a",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isstring()@isoptional",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isstring()@minlength(5)@isnotempty",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post('/new",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto",{"_index":262,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":104,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:101",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:12",{"_index":260,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:133",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:29",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:38",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:50",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:59",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:67",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:75",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:83",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:91",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":271,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":320,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":269,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postservice",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":294,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["poststatus})@isenum(poststatus)@isnotempty",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posttype",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype})@isenum(posttype)@isnotempty",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["prefix",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":463,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":440,"title":{},"body":{"index.html":{}}}],["project",{"_index":453,"title":{},"body":{"index.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishedon",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":479,"title":{},"body":{"index.html":{}}}],["read",{"_index":524,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":495,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":452,"title":{},"body":{"index.html":{}}}],["request",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["required",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":472,"title":{},"body":{"index.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":457,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":445,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["series",{"_index":435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":446,"title":{},"body":{"index.html":{}}}],["service",{"_index":326,"title":{},"body":{"injectables/PostsService.html":{}}}],["setup",{"_index":454,"title":{},"body":{"index.html":{}}}],["side",{"_index":447,"title":{},"body":{"index.html":{}}}],["slug",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sponsors",{"_index":519,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":379,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:11",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:19",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":256,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":270,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:13",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:23",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:28",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":319,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":321,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":325,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":323,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":249,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":264,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":380,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:12",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:32",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:46",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:55",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:61",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":377,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":459,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":462,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":464,"title":{},"body":{"index.html":{}}}],["started",{"_index":439,"title":{"index.html":{}},"body":{}}],["starter",{"_index":451,"title":{},"body":{"index.html":{}}}],["statements",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":503,"title":{},"body":{"index.html":{}}}],["story",{"_index":434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":280,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":480,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":535,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["table",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":467,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":470,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":469,"title":{},"body":{"index.html":{}}}],["tests",{"_index":465,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":518,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postservice.findall(userid",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getusersparamdto",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid('1234",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":329,"title":{},"body":{"injectables/PostsService.html":{}}}],["time",{"_index":496,"title":{},"body":{"index.html":{}}}],["title",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["token",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":526,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":531,"title":{},"body":{"index.html":{}}}],["type",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":267,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":450,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@isstring({each",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":466,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":542,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":505,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["url",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":268,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":250,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users'})@apiquery({name",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["users'})@apiresponse({status",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":378,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":331,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":75,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":497,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validationpipe",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":540,"title":{},"body":{"properties.html":{}}}],["video",{"_index":489,"title":{},"body":{"index.html":{}}}],["visit",{"_index":476,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":491,"title":{},"body":{"index.html":{}}}],["void",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{}}}],["watch",{"_index":460,"title":{},"body":{"index.html":{}}}],["website",{"_index":529,"title":{},"body":{"index.html":{}}}],["without",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["working",{"_index":475,"title":{},"body":{"index.html":{}}}],["world",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":507,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":455,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":522,"title":{},"body":{"index.html":{}}}],["z0",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*?&]{8",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    // Injecting the UsersService\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n  public login(email: string, password: string, id: string) {\n    // Check user exists\n    const user = this.usersService.findOneById('1234');\n    // login\n    // token\n    return 'Sample_Token';\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishedOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The content of the post', example: 'This is my first post'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The featured image URL of the post', example: 'https://example.com/image.jpg'})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined, description: 'The meta options of the post', example: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The type of the post', example: 'post', enum: PostType})@IsEnum(PostType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The date the post was published', example: '2021-01-01T00:00:00Z'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The schema of the post', example: '{\"type\": \"object\"}'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The slug of the post', example: 'my-first-post'})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug can only contain lowercase alphanumeric characters and hyphens without spaces. Example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The status of the post', example: 'draft', enum: PostStatus})@IsEnum(PostStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The tags of the post', example: undefined})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The title of the post', example: 'My first post'})@IsString()@MinLength(5)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PostType } from '../enums/postType.enum';\nimport { PostStatus } from '../enums/postStatus.enum';\nimport {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  Min,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-opttions.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    description: 'The title of the post',\n    example: 'My first post',\n  })\n  @IsString()\n  @MinLength(5)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    description: 'The type of the post',\n    example: 'post',\n    enum: PostType,\n  })\n  @IsEnum(PostType)\n  @IsNotEmpty()\n  postType: PostType;\n\n  @ApiProperty({\n    description: 'The slug of the post',\n    example: 'my-first-post',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug can only contain lowercase alphanumeric characters and hyphens without spaces. Example \"my-url\"',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'The status of the post',\n    example: 'draft',\n    enum: PostStatus,\n  })\n  @IsEnum(PostStatus)\n  @IsNotEmpty()\n  status: PostStatus;\n\n  @ApiPropertyOptional({\n    description: 'The content of the post',\n    example: 'This is my first post',\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: 'The schema of the post',\n    example: '{\"type\": \"object\"}',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'The featured image URL of the post',\n    example: 'https://example.com/image.jpg',\n  })\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'The date the post was published',\n    example: '2021-01-01T00:00:00Z',\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishedOn?: Date;\n\n  @ApiPropertyOptional({\n    description: 'The tags of the post',\n    example: ['nestjs', 'nestjs-swagger'],\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description: 'The key of the meta option',\n          example: 'author',\n        },\n        value: {\n          type: 'any',\n          description: 'The value of the meta option',\n          example: 'John Doe',\n        },\n      },\n    },\n    description: 'The meta options of the post',\n    example: [\n      {\n        key: 'author',\n        value: 'John Doe',\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions?: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-opttions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-opttions.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-opttions.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(50, {message: 'First name can not be longer than 50 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(50, {message: 'Last name can not be longer than 50 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[a-zA-Z\\d@$!%*?&]{8,}$/, {message: 'Minimum eight characters, Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(50, { message: 'First name can not be longer than 50 characters' })\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(50, { message: 'Last name can not be longer than 50 characters' })\n  lastName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[a-zA-Z\\d@$!%*?&]{8,}$/,\n    {\n      message:\n        'Minimum eight characters, Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character',\n    },\n  )\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get User ID', example: 1})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-params.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsOptional } from 'class-validator';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Get User ID',\n    example: 1,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the post', example: 1})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The id of the post',\n    example: 1,\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    Public\n                                patchPost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new post'})@ApiResponse({status: 201, description: 'The post has been successfully created.'})@Post('/new-post')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchPost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/edit-post')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postService: PostsService) {}\n\n  @Get('/:userId?')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postService.findAll(userId);\n  }\n\n  @ApiOperation({ summary: 'Create a new post' })\n  @ApiResponse({\n    status: 201,\n    description: 'The post has been successfully created.',\n  })\n  @Post('/new-post')\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log(createPostDto, 'You sent a POST request to posts endpoint');\n  }\n\n  @Patch('/edit-post')\n  public patchPost(@Body() patchPostDto: PatchPostDto) {\n    console.log(patchPostDto, 'You sent a PATCH request to posts endpoint');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(\n    // Injecting Users Service\n    private readonly usersService: UsersService,\n  ) {}\n  public findAll(userId: string) {\n    // We need users service\n    // Find a user\n    const user = this.usersService.findOneById(userId);\n\n    return [\n      {\n        user: user,\n        id: 1,\n        title: 'Post 1',\n        content: 'Post 1 content',\n        userId: userId,\n      },\n      {\n        user: user,\n        id: 2,\n        title: 'Post 2',\n        content: 'Post 2 content',\n        userId: userId,\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Get all users'})@ApiResponse({status: 200, description: 'The list of all users'})@ApiQuery({name: 'limit', type: Number, required: false, description: 'Limit the number of users returned', example: 10})@ApiQuery({name: 'page', type: Number, required: false, description: 'The page number', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { UsersService } from './providers/users.service';\nimport {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Put,\n  Delete,\n  Param,\n  Query,\n  Body,\n  Headers,\n  ParseIntPipe,\n  DefaultValuePipe,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-params.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n  @Get('/:id?')\n  @ApiOperation({ summary: 'Get all users' })\n  @ApiResponse({\n    status: 200,\n    description: 'The list of all users',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false,\n    description: 'Limit the number of users returned',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false,\n    description: 'The page number',\n    example: 1,\n  })\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUsersParamDto, limit, page);\n  }\n\n  @Post()\n  public createUser(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto);\n    return 'You sent a POST request to users endpoint';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(gtUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gtUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AuthService } from 'src/auth/providers/auth.service';\nimport { GetUsersParamDto } from './../dtos/get-users-params.dto';\nimport { forwardRef, Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    // Injecting authService\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n  public findAll(\n    gtUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    const isAuth = this.authService.isAuth();\n    console.log('isAuth', isAuth);\n    return [\n      {\n        firstName: 'John',\n        email: 'john@email.com',\n      },\n      {\n        firstName: 'Doe',\n        email: 'doe@john.com',\n      },\n    ];\n  }\n\n  // Find User by ID\n  public findOneById(id: string) {\n    return {\n      id: 1234,\n      firstName: 'John',\n      email: 'john@email.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-opttions.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-params.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            PostType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ yarn installCompile and run the project\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodRun tests\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
